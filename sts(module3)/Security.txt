pom.xml
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-security</artifactId>
</dependency>

1..........
package com.example.demos;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
	public class HelloController {
	@GetMapping("/hello")
	public String sayHello(String name)
	{
		return "hello"+name;
	}

	}


2..............
package com.example.demos;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
//@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter 
{
@Override
protected void configure(HttpSecurity http) throws Exception
{
	http
	.csrf().disable().authorizeRequests().anyRequest().authenticated().and().httpBasic();
}
@Autowired
protected void configureGlobal(AuthenticationManagerBuilder auth) throws Exception
{
	auth.inMemoryAuthentication().withUser("admin").password("{noop}password").roles("USER");
}
}
3...
application.properties
server.port=5055

goto google
localhost:5055/hello?name=kavya
output:kavya